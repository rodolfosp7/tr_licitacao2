# Agente de Licita√ß√µes ‚Äì Gerador de Termo de Refer√™ncia (TR)
# Vers√£o interativa (wizard) com pr√©-visualiza√ß√£o e exporta√ß√£o .docx
# Base legal: arts. 6¬∫, 40 e 92 da Lei 14.133/2021 e art. 30 do Decreto Municipal n¬∫ 09/2024

import json
from datetime import date
from io import BytesIO

import streamlit as st
from docx import Document

# ==========================
# CONFIGURA√á√ÉO DA P√ÅGINA
# ==========================
st.set_page_config(
    page_title="Agente de Licita√ß√µes ‚Äì TR",
    layout="wide",
    page_icon="üìë",
)

# Pequeno estilo para deixar parecido com apps web profissionais
st.markdown(
    """
    <style>
    .block-container {padding-top: 1.5rem; padding-bottom: 2rem;}
    .stProgress > div > div > div > div { background-color: #2E7D32; }
    .badge {background:#F1F5F9;border-radius:999px;padding:.2rem .6rem;font-size:.8rem;margin-left:.5rem}
    .muted{color:#64748B}
    textarea{font-family: ui-monospace, SFMono-Regular, Menlo, monospace;}
    </style>
    """,
    unsafe_allow_html=True,
)

# ==========================
# SIDEBAR ‚Äì LOGO E NAVEGA√á√ÉO
# ==========================
st.sidebar.title("‚öôÔ∏è Configura√ß√£o")
logo = st.sidebar.file_uploader("Opcional: enviar logotipo (PNG/JPG)", type=["png", "jpg", "jpeg"]) 

passos = [
    "1) Objeto e categoria",
    "2) Par√¢metros contratuais",
    "3) Requisitos",
    "4) Solu√ß√£o e ciclo de vida",
    "5) Crit√©rios de medi√ß√£o",
    "6) Pr√©via e exporta√ß√£o",
]

etapa = st.sidebar.radio("Navega√ß√£o", passos, index=0)

# Barra de progresso simples
st.sidebar.progress((passos.index(etapa) + 1) / len(passos))

# Salvar/Carregar rascunho
st.sidebar.markdown("---")
st.sidebar.subheader("üíæ Rascunho")
rascunho_file = st.sidebar.file_uploader("Carregar rascunho (.json)", type=["json"], key="upjson")
if rascunho_file is not None:
    try:
        st.session_state["dados"] = json.load(rascunho_file)
        st.sidebar.success("Rascunho carregado!")
    except Exception as e:
        st.sidebar.error(f"Erro ao ler JSON: {e}")

# Inicializa estrutura de dados na sess√£o
if "dados" not in st.session_state:
    st.session_state["dados"] = {
        "objeto": "",
        "categoria": "Compra",
        "subcategoria": "G√°s de cozinha (GLP)",
        "srp": True,
        "modalidade": "Preg√£o Eletr√¥nico",
        "criterio": "Menor pre√ßo por item",
        "vigencia_meses": 12,
        "prorrogavel": True,
        "dotacao": "",
        "requisitos_marcados": [],
        "requisitos_extra": "",
        "solucao_texto": "",
        "ciclo_texto": "",
        "medicao_texto": "",
        "unidades_entrega": "",
    }

d = st.session_state["dados"]

# Utilit√°rio: baixar rascunho
def baixar_json():
    return BytesIO(json.dumps(st.session_state["dados"], ensure_ascii=False, indent=2).encode("utf-8"))

st.sidebar.download_button(
    "‚¨áÔ∏è Baixar rascunho (.json)",
    data=baixar_json(),
    file_name="rascunho_tr.json",
    mime="application/json",
)

# ==========================
# CABE√áALHO VISUAL
# ==========================
col1, col2 = st.columns([1, 3])
with col1:
    if logo:
        st.image(logo, use_column_width=True)
    else:
        st.markdown("### Prefeitura de Brasnorte\n**Gerador de Termo de Refer√™ncia**")
with col2:
    st.caption("Vers√£o interativa. Preencha as etapas ao lado e gere o TR completo com base na Lei 14.133/2021.")

st.markdown("---")

# ==========================
# ETAPA 1 ‚Äì OBJETO E CATEGORIA
# ==========================
if etapa == "1) Objeto e categoria":
    st.subheader("1) Objeto e categoria")
    d["objeto"] = st.text_area(
        "üìù Descreva o objeto da contrata√ß√£o (seja espec√≠fico)",
        value=d.get("objeto", ""),
        placeholder=(
            "Ex.: Registro de pre√ßos para futura e eventual contrata√ß√£o de empresa especializada "
            "no fornecimento de g√°s de cozinha (GLP), botij√µes P13 e P45, com entrega nas unidades..."
        ),
        height=130,
    )

    c1, c2, c3 = st.columns(3)
    with c1:
        d["categoria"] = st.selectbox("Categoria do objeto", ["Compra", "Servi√ßo", "Obra"], index=["Compra","Servi√ßo","Obra"].index(d.get("categoria","Compra")))
    with c2:
        # Subcategorias dependem da categoria (exemplos)
        sub_opts = {
            "Compra": ["G√°s de cozinha (GLP)", "Material de expediente", "G√™neros aliment√≠cios", "Combust√≠veis"],
            "Servi√ßo": ["Hotelaria e hospedagem", "Vigil√¢ncia/seguran√ßa", "Limpeza e conserva√ß√£o", "Transporte"],
            "Obra": ["Reforma predial", "Pavimenta√ß√£o", "Constru√ß√£o civil"]
        }
        d["subcategoria"] = st.selectbox("Subcategoria", sub_opts[d["categoria"]], index=max(0, sub_opts[d["categoria"]].index(d.get("subcategoria", sub_opts[d["categoria"]][0])) if d.get("subcategoria") in sub_opts[d["categoria"]] else 0))
    with c3:
        d["unidades_entrega"] = st.text_input("Locais/Unidades atendidas (opcional)", value=d.get("unidades_entrega", ""), placeholder="Ex.: Escolas, CRAS, UBS, Almoxarifado central‚Ä¶")

    st.info("Dica: quanto mais espec√≠fico o objeto, mais assertivo ser√° o texto do TR gerado.")

# ==========================
# ETAPA 2 ‚Äì PAR√ÇMETROS CONTRATUAIS
# ==========================
if etapa == "2) Par√¢metros contratuais":
    st.subheader("2) Par√¢metros contratuais")
    c1, c2, c3 = st.columns(3)
    with c1:
        d["srp"] = st.checkbox("Usar Sistema de Registro de Pre√ßos (SRP)", value=d.get("srp", True))
    with c2:
        d["modalidade"] = st.selectbox("Modalidade", ["Preg√£o Eletr√¥nico", "Concorr√™ncia", "Dispensa", "Inexigibilidade"], index=["Preg√£o Eletr√¥nico","Concorr√™ncia","Dispensa","Inexigibilidade"].index(d.get("modalidade","Preg√£o Eletr√¥nico")))
    with c3:
        d["criterio"] = st.selectbox("Crit√©rio de julgamento", ["Menor pre√ßo por item", "Menor pre√ßo global", "T√©cnica e pre√ßo"], index=["Menor pre√ßo por item","Menor pre√ßo global","T√©cnica e pre√ßo"].index(d.get("criterio","Menor pre√ßo por item")))

    c4, c5, c6 = st.columns(3)
    with c4:
        d["vigencia_meses"] = st.number_input("Vig√™ncia (meses)", min_value=1, max_value=60, value=int(d.get("vigencia_meses", 12)))
    with c5:
        d["prorrogavel"] = st.checkbox("Contrato prorrog√°vel", value=d.get("prorrogavel", True))
    with c6:
        d["dotacao"] = st.text_input("Dota√ß√£o (opcional)", value=d.get("dotacao", ""), placeholder="Ex.: 03.001.04.122.0002‚Ä¶")

# ==========================
# ETAPA 3 ‚Äì REQUISITOS
# ==========================
if etapa == "3) Requisitos":
    st.subheader("3) Requisitos da contrata√ß√£o")

    # Requisitos padr√£o (checklist)
    req_base = [
        "Regularidade fiscal, previdenci√°ria e trabalhista",
        "Capacidade t√©cnica compat√≠vel (atestados)",
        "Atendimento a normas de seguran√ßa e qualidade",
        "Equipe t√©cnica qualificada",
        "Plano de trabalho e cronograma",
        "Garantia de fornecimento ininterrupto",
        "Conformidade com LGPD e seguran√ßa da informa√ß√£o",
        "Responsabilidade socioambiental",
        "Observ√¢ncia √†s normas ABNT aplic√°veis",
        "Apresenta√ß√£o de notas fiscais e relat√≥rios para medi√ß√£o",
    ]

    # Extras por subcategoria (exemplos)
    extras_por_sub = {
        "G√°s de cozinha (GLP)": [
            "Licen√ßas e autoriza√ß√µes para comercializa√ß√£o e transporte de GLP",
            "Cilindros e botij√µes certificados pelo INMETRO",
            "Entrega em conformidade com normas de seguran√ßa (NRs, Corpo de Bombeiros)",
            "Peso l√≠quido aferido e lacres de seguran√ßa",
        ],
        "Hotelaria e hospedagem": [
            "Recep√ß√£o 24h e caf√© da manh√£ incluso (quando aplic√°vel)",
            "Wi-Fi, ar-condicionado, higiene e enxoval",
            "NF individual por h√≥spede e di√°ria",
        ],
    }

    marcados = set(d.get("requisitos_marcados", []))

    st.markdown("**Selecione os requisitos aplic√°veis**")
    # Base
    for r in req_base:
        val = st.checkbox(r, value=(r in marcados), key=f"req_{hash(r)}")
        if val:
            marcados.add(r)
        else:
            if r in marcados:
                marcados.remove(r)
    # Extras
    for r in extras_por_sub.get(d["subcategoria"], []):
        val = st.checkbox(r, value=(r in marcados), key=f"req_extra_{hash(r)}")
        if val:
            marcados.add(r)
        else:
            if r in marcados:
                marcados.remove(r)

    d["requisitos_marcados"] = list(marcados)

    d["requisitos_extra"] = st.text_area(
        "‚ûï Requisitos adicionais (texto livre)",
        value=d.get("requisitos_extra", ""),
        placeholder="Inclua exig√™ncias espec√≠ficas do objeto/mercado local.",
    )

# ==========================
# ETAPA 4 ‚Äì SOLU√á√ÉO E CICLO DE VIDA
# ==========================
if etapa == "4) Solu√ß√£o e ciclo de vida":
    st.subheader("4) Descri√ß√£o da solu√ß√£o e ciclo de vida")

    # Sugest√µes autom√°ticas (edit√°veis)
    sol1 = (
        "Solu√ß√£o 1 ‚Äì Execu√ß√£o direta pela Administra√ß√£o: demanda estrutura, equipe e log√≠stica pr√≥prias; "
        "em regra, revela-se invi√°vel por aus√™ncia de aparato t√©cnico-operacional e pela economicidade."
    )
    sol2 = (
        "Solu√ß√£o 2 ‚Äì Contrata√ß√£o de empresa especializada por licita√ß√£o: garante expertise t√©cnica, "
        "cumprimento de prazos, qualidade e conformidade regulat√≥ria."
    )
    conclusao = (
        "Conclus√£o: recomenda-se a execu√ß√£o indireta (Solu√ß√£o 2), por melhor custo-benef√≠cio, seguran√ßa jur√≠dica "
        "e efici√™ncia administrativa, em ader√™ncia √† Lei 14.133/2021."
    )

    default_solucao = f"""{sol1}\n\n{sol2}\n\n{conclusao}"""

    d["solucao_texto"] = st.text_area(
        "‚úçÔ∏è Solu√ß√µes avaliadas (edite se necess√°rio)",
        value=d.get("solucao_texto", default_solucao),
        height=160,
    )

    default_ciclo = (
        "Planejamento da demanda ‚Üí sele√ß√£o do fornecedor ‚Üí formaliza√ß√£o (ARP/contrato) ‚Üí execu√ß√£o e entregas ‚Üí "
        "medi√ß√µes e pagamentos ‚Üí avalia√ß√£o de desempenho ‚Üí encerramento contratual."
    )
    d["ciclo_texto"] = st.text_area(
        "‚ôªÔ∏è Ciclo de vida do objeto (edite se necess√°rio)",
        value=d.get("ciclo_texto", default_ciclo),
        height=120,
    )

# ==========================
# ETAPA 5 ‚Äì CRIT√âRIOS DE MEDI√á√ÉO
# ==========================
if etapa == "5) Crit√©rios de medi√ß√£o":
    st.subheader("5) Crit√©rios de medi√ß√£o")

    # Modelos por subcategoria (edit√°veis)
    med_glp = (
        "Unidade de medida: Kg de GLP e/ou di√°rias de botij√µes P13/P45 entregues.\n"
        "Itens mensurados: quantidade por tipo de botij√£o/cilindro; conformidade do peso l√≠quido; lacres; \n"
        "documentos: NF com locais de entrega, datas/hor√°rios; comprovantes de recebimento; \n"
        "Aceite: confer√™ncia pelo fiscal; glosas em caso de diverg√™ncias; pagamento apenas ap√≥s aceite."
    )
    med_hotel = (
        "Unidade de medida: di√°ria por h√≥spede (24h). Itens: tipo de acomoda√ß√£o, caf√© da manh√£, despesas autorizadas;\n"
        "Documentos: rela√ß√£o nominal (CPF, check-in/out), relat√≥rio mensal, NFs compat√≠veis com ARP/contrato;\n"
        "Aceite e atesto pelo gestor; glosas se houver inconsist√™ncia."
    )
    med_generico = (
        "Medi√ß√£o baseada em entregas/servi√ßos efetivamente realizados, conferidos e atestados pelo fiscal; \n"
        "Pagamento condicionado ao aceite formal e conformidade com quantitativos, prazos e especifica√ß√µes."
    )

    sugestao = med_generico
    if d["subcategoria"] == "G√°s de cozinha (GLP)":
        sugestao = med_glp
    elif d["subcategoria"] == "Hotelaria e hospedagem":
        sugestao = med_hotel

    d["medicao_texto"] = st.text_area(
        "üßæ Texto de medi√ß√£o (edite se necess√°rio)",
        value=d.get("medicao_texto", sugestao),
        height=170,
    )

# ==========================
# FUN√á√ÉO ‚Äì GERAR TEXTO DO TR
# ==========================

def gerar_texto_tr(d: dict) -> str:
    obj = d.get("objeto", "").strip()
    sub = d.get("subcategoria", "")

    # Cabe√ßalho institucional
    partes = [
        "PREFEITURA MUNICIPAL DE BRASNORTE - MT",
        "SECRETARIA MUNICIPAL DE ADMINISTRA√á√ÉO",
        "",
        "TERMO DE REFER√äNCIA",
        "",
        "1. DAS CONDI√á√ïES GERAIS DA CONTRATA√á√ÉO",
        f"\n1.1 O presente termo de refer√™ncia tem por objeto o {obj.upper() if obj else '[OBJETO N√ÉO INFORMADO]'}, com sede localizada no munic√≠pio de Brasnorte-MT, em conformidade com as especifica√ß√µes de descri√ß√£o e quantidade detalhadamente elencadas neste documento, amparada pelas disposi√ß√µes legais vigentes que regulam tal procedimento, visando atender as necessidades da Prefeitura Municipal de Brasnorte-MT e de suas Secretarias Municipais;",
        "\n1.2 O objeto desta contrata√ß√£o n√£o se enquadra como sendo de bem de luxo, conforme Decreto Municipal n¬∫ 03/2024;",
        f"\n1.3 O prazo de vig√™ncia da contrata√ß√£o √© de {d.get('vigencia_meses',12)} (doze) meses, contados da data de assinatura da ARP (Ata de Registro de Pre√ßos) ou do Contrato, na forma do art. 105 da Lei n¬∫ 14.133/2021, podendo ser prorrogado a crit√©rio da Administra√ß√£o P√∫blica.",
        ("\n1.4 O prazo de vig√™ncia poder√° ser prorrogado, desde que haja interesse de ambas as partes, nos termos dos arts. 106 e 107 da Lei n¬∫ 14.133/2021." if d.get("prorrogavel", True) else ""),
        "",
        "2. DESCRI√á√ÉO DA NECESSIDADE DA CONTRATA√á√ÉO E FUNDAMENTA√á√ÉO LEGAL",
        f"\n2.1 A presente contrata√ß√£o se fundamenta na necessidade institucional de garantir o atendimento cont√≠nuo e eficiente relativo a {sub.lower()} para as unidades/secretarias do Munic√≠pio, assegurando a continuidade dos servi√ßos p√∫blicos e o cumprimento da miss√£o institucional.",
        "\n2.2 A contrata√ß√£o tem por finalidade atender √†s Secretarias Municipais, promovendo suporte √†s atividades administrativas, operacionais e t√©cnicas, conforme planejamento da gest√£o e demanda das unidades requisitantes;",
        "\n2.3 Justifica-se pela inexist√™ncia de estrutura pr√≥pria que permita a execu√ß√£o direta, sendo necess√°ria a contrata√ß√£o especializada para garantir efici√™ncia, economicidade e regularidade;",
        f"\n2.4 O procedimento adotado ser√° a modalidade {d.get('modalidade')} com crit√©rio de julgamento {d.get('criterio').lower()}, observado o disposto na Lei n¬∫ 14.133/2021." ,
        ("\n2.5 Ser√° adotado o Sistema de Registro de Pre√ßos (SRP), nos termos do Decreto Federal n¬∫ 11.462/2023, proporcionando flexibilidade e economicidade." if d.get("srp", True) else ""),
        "",
        "3. DESCRI√á√ÉO DA SOLU√á√ÉO COMO UM TODO CONSIDERADO O CICLO DE VIDA DO OBJETO E ESPECIFICA√á√ÉO",
        f"\n3.1 {d.get('solucao_texto','')}",
        f"\n3.2 Ciclo de vida do objeto: {d.get('ciclo_texto','')} ",
        "",
        "4. REQUISITOS DA CONTRATA√á√ÉO",
        "\n4.1 A contratada dever√° atender, no m√≠nimo, aos seguintes requisitos:" ,
    ]

    # Lista de requisitos marcados
    for i, r in enumerate(d.get("requisitos_marcados", []), start=1):
        partes.append(f"\n4.1.{i} {r}.")
    if d.get("requisitos_extra"):
        partes.append(f"\n4.2 Requisitos adicionais: {d['requisitos_extra']}")

    partes += [
        "",
        "5. MODELO DE EXECU√á√ÉO CONTRATUAL",
        "\n5.1 A execu√ß√£o contratual se dar√° mediante ordens de fornecimento/servi√ßo emitidas pela Administra√ß√£o, com fiscaliza√ß√£o designada conforme a Lei n¬∫ 14.133/2021;",
        "\n5.2 Os pagamentos ocorrer√£o ap√≥s aceite formal, mediante apresenta√ß√£o de nota fiscal e relat√≥rio de entrega/execu√ß√£o, em conformidade com as especifica√ß√µes e quantitativos contratados;",
        "\n5.3 A gest√£o e a fiscaliza√ß√£o observar√£o os arts. 117 a 124 da Lei n¬∫ 14.133/2021, incluindo registros de ocorr√™ncias, notifica√ß√µes e relat√≥rios de acompanhamento;",
        "",
        "6. CRIT√âRIOS DE MEDI√á√ÉO",
        f"\n6.1 {d.get('medicao_texto','Medi√ß√£o baseada em entregas/servi√ßos atestados pelo fiscal, com pagamento ap√≥s aceite.')}",
        "",
        f"**Brasnorte - MT, {date.today().strftime('%d/%m/%Y')}**",
        "\n---\n",
        "Este documento √© gerado automaticamente com base nas diretrizes legais vigentes e poder√° ser personalizado conforme peculiaridades do objeto. Recomenda-se revis√£o da Procuradoria Jur√≠dica e do Controle Interno.",
    ]

    return "\n".join([p for p in partes if p is not None and p != ""])

# ==========================
# ETAPA 6 ‚Äì PR√âVIA E EXPORTA√á√ÉO
# ==========================
if etapa == "6) Pr√©via e exporta√ß√£o":
    st.subheader("6) Pr√©-visualiza√ß√£o e exporta√ß√£o")

    # Valida√ß√µes simples
    if not d.get("objeto"):
        st.error("Informe o objeto da contrata√ß√£o na etapa 1.")
    else:
        texto = gerar_texto_tr(d)
        st.markdown("### üìÑ Pr√©via do Termo de Refer√™ncia")
        st.text_area("Conte√∫do gerado:", texto, height=500)

        # Exportar DOCX
        def gerar_docx(texto: str) -> BytesIO:
            doc = Document()
            if logo:
                # Insere logotipo no topo (se o usu√°rio enviou). Tamanho depender√° da imagem.
                doc.add_picture(logo)
            for linha in texto.split("\n"):
                doc.add_paragraph(linha)
            buf = BytesIO()
            doc.save(buf)
            buf.seek(0)
            return buf

        docx_bin = gerar_docx(texto)
        st.download_button(
            label="üì• Baixar TR em Word (.docx)",
            data=docx_bin,
            file_name="Termo_de_Referencia_Brasnorte.docx",
            mime="application/vnd.openxmlformats-officedocument.wordprocessingml.document",
        )

        # Exportar rascunho JSON desta tela
        st.download_button(
            label="üíæ Baixar rascunho (.json)",
            data=baixar_json(),
            file_name="rascunho_tr.json",
            mime="application/json",
        )

# Rodap√©
st.markdown("<span class='muted'>Agente de Licita√ß√µes ‚Äì Prefeitura de Brasnorte ‚Ä¢ Lei 14.133/2021</span>", unsafe_allow_html=True)
